/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package samples.clickstream.avro;  

import java.util.Random;
import java.security.SecureRandom;
import java.util.Calendar; 
import java.time.Instant; 
import java.text.DateFormat; 
import java.text.SimpleDateFormat; 


@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated

public class ClickEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  //public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"namespace\":\"samples.demo_transactions.avro\",\n,\"type\":\"record\",\"name\":\"demo_transactions\",\"fields\":[{\"name\":\"Account_Id\",\"type\":\"string\"},{\"name\":\"Customer_Name\",\"type\":\"string\"},{\"name\":\"Merchant_Type\",\"type\":\"string\"},{\"name\":\"Transaction_Id\",\"type\":\"string\"},{\"name\":\"Transaction_Type\",\"type\":\"string\"},{\"name\":\"Transaction_Amount\",\"type\":\"int\"},{\"name\":\"Transaction_Date\",\"type\":\"string\"}]}");
  private static final String SCHEMA_DEFINITION = "{\"namespace\": \"default-registry\",\n"
   + " \"type\": \"record\",\n"
   + " \"name\": \"demo_transactions\",\n"
   + " \"fields\": [\n"
   + " {\"name\": \"Account_Id\", \"type\": \"string\"},\n"
   + " {\"name\": \"Customer_Name\", \"type\": \"string\"},\n"
   + " {\"name\": \"Merchant_Type\", \"type\": \"string\"},\n"
   + " {\"name\": \"Transaction_Id\", \"type\": \"string\"},\n"
   + " {\"name\": \"Transaction_Type\", \"type\": \"string\"},\n"
  + " {\"name\": \"Transaction_Amount\", \"type\": \"int\"},\n"
  + " {\"name\": \"Transaction_Date\", \"type\": \"string\"}\n"
  + " ]\n"
  + "}";
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(SCHEMA_DEFINITION);
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence Account_Id;
  @Deprecated public java.lang.CharSequence Customer_Name;
  @Deprecated public java.lang.CharSequence Merchant_Type;
  @Deprecated public java.lang.CharSequence Transaction_Id;
  @Deprecated public java.lang.CharSequence Transaction_Type;
  @Deprecated public int Transaction_Amount;
  @Deprecated public java.lang.CharSequence Transaction_Date;


  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ClickEvent() {}

  /**
   * All-args constructor.
   */
  public ClickEvent(java.lang.CharSequence Account_Id, CharSequence Customer_Name, java.lang.CharSequence Merchant_Type, java.lang.CharSequence Transaction_Id, java.lang.CharSequence Transaction_Type, java.lang.Integer Transaction_Amount, java.lang.CharSequence Transaction_Date) {
    this.Account_Id = Account_Id;
    this.Customer_Name = Customer_Name;
    this.Merchant_Type = Merchant_Type;
    this.Transaction_Id = Transaction_Id;
    this.Transaction_Type = Transaction_Type;
    this.Transaction_Amount = Transaction_Amount;
    this.Transaction_Date = Transaction_Date;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Account_Id;
    case 1: return Customer_Name;
    case 2: return Merchant_Type;
    case 3: return Transaction_Id;
    case 4: return Transaction_Type;
    case 5: return Transaction_Amount;
    case 6: return Transaction_Date;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Account_Id = (java.lang.CharSequence)value$; break;
    case 1: Customer_Name = (java.lang.CharSequence)value$; break;
    case 2: Merchant_Type = (java.lang.CharSequence)value$; break;
    case 3: Transaction_Id = (java.lang.CharSequence)value$; break;
    case 4: Transaction_Type = (java.lang.CharSequence)value$; break;
    case 5: Transaction_Amount = (java.lang.Integer)value$; break;
    case 6: Transaction_Date = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ip' field.
   */
  public java.lang.CharSequence getAccount_Id() {
    
    Random r = new Random();
    int low = 1000000001;
    int high = 1000000020;
    return String.valueOf(r.nextInt(high-low) + low);
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setAccount_Id(java.lang.CharSequence value) {
    this.Account_Id = value;
  }

  /**
   * Gets the value of the 'eventtimestamp' field.
   */
  public  java.lang.CharSequence getCustomer_Name(int size) {
     String POSIBLE_SYMBOLS = "qwertzuiopasdfghjklyxcvbnmMNBCXYLKJHGFDSAPOIUZTRWQ";
     String randomSymbols = "";
        SecureRandom randomizer = new SecureRandom();
        for (int i = 0; i < size; i++) {
            int index = randomizer.nextInt(POSIBLE_SYMBOLS.length());
            char nextSymbol = POSIBLE_SYMBOLS.charAt(index);
            randomSymbols += nextSymbol;
        }/*from w  w w.jav  a  2 s.  co  m*/
        return randomSymbols;
  }

  /**
   * Sets the value of the 'eventtimestamp' field.
   * @param value the value to set.
   */
  public void setCustomer_Name(java.lang.CharSequence value) {
    this.Customer_Name = value;
  }

  /**
   * Gets the value of the 'Merchant_Type' field.
   */
  public java.lang.CharSequence getMerchant_Type() {
    
    String[] txn_locations = {"Grocery_Store", "Gas_Station", "Shopping_Mall", "City_Services", "HealthCare_Service", "Food and Beverage", "Others"}; 
    int rnd = new Random().nextInt(txn_locations.length);
    return txn_locations[rnd];
   }

  /**
   * Sets the value of the 'devicetype' field.
   * @param value the value to set.
   */
  public void setMerchant_Type(java.lang.CharSequence value) {
    this.Merchant_Type = value;
  }

  /**
   * Gets the value of the 'Transaction_Id' field.
   */
  public java.lang.CharSequence getTransaction_Id(int size) {
      String POSIBLE_SYMBOLS = "qwertzuiopasdfghjklyxcvbnmMNBCXYLKJHGFDSAPOIUZTRWQ1234567890";
      String randomSymbols = "";
        SecureRandom randomizer = new SecureRandom();
        for (int i = 0; i < size; i++) {
            int index = randomizer.nextInt(POSIBLE_SYMBOLS.length());
            char nextSymbol = POSIBLE_SYMBOLS.charAt(index);
            randomSymbols += nextSymbol;
        }/*from w  w w.jav  a  2 s.  co  m*/
        return randomSymbols;
  }

  /**
   * Sets the value of the 'Transaction_Id' field.
   * @param value the value to set.
   */
  public void setTransaction_Id(java.lang.CharSequence value) {
    this.Transaction_Id = value;
  }

  /**
   * Gets the value of the 'Transaction_Type' field.
   */
  public java.lang.CharSequence getTransaction_Type() {
    String[] txn_type = {"Online", "In Store"}; 
    int rnd = new Random().nextInt(txn_type.length);
    return txn_type[rnd];
  }

  /**
   * Sets the value of the 'Transaction_Type' field.
   * @param value the value to set.
   */
  public void setTransaction_Type(java.lang.CharSequence value) {
    this.Transaction_Type = value;
  }

  /**
   * Gets the value of the 'Transaction_Amount' field.
   */
  public java.lang.Integer getTransaction_Amount() {
    Random r = new Random();
    int low = 100;
    int high = 1000;
    return r.nextInt(high-low) + low;
  }

  /**
   * Sets the value of the 'Transaction_Amount' field.
   * @param value the value to set.
   */
  public void setTransaction_Amount(java.lang.Integer value) {
    this.Transaction_Amount = value;
  }

  /**
   * Gets the value of the 'Transaction_Date' field.
   */
  public java.lang.CharSequence getTransaction_Date(String date) {
    // Converts the string 
        // format to date object 
       Instant instant = Instant.now();
  
        // Convert the date into a 
        // string using format() method 
        String dateToString = instant.toString();
  
        // Return the result 
        return (dateToString); 
  }

  /**
   * Sets the value of the 'Transaction_Date' field.
   * @param value the value to set.
   */
  public void setTransaction_Date(java.lang.CharSequence  value) {
    this.Transaction_Date = value;
  }


  /** Creates a new ClickEvent RecordBuilder */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder() {
    return new samples.clickstream.avro.ClickEvent.Builder();
  }
  
  /** Creates a new ClickEvent RecordBuilder by copying an existing Builder */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder(samples.clickstream.avro.ClickEvent.Builder other) {
    return new samples.clickstream.avro.ClickEvent.Builder(other);
  }
  
  /** Creates a new ClickEvent RecordBuilder by copying an existing ClickEvent instance */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder(samples.clickstream.avro.ClickEvent other) {
    return new samples.clickstream.avro.ClickEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for ClickEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClickEvent>
    implements org.apache.avro.data.RecordBuilder<ClickEvent> {

    private java.lang.CharSequence Account_Id;
    private java.lang.CharSequence  Customer_Name;
    private java.lang.CharSequence Merchant_Type;
    private java.lang.CharSequence Transaction_Id;
    private java.lang.CharSequence Transaction_Type;
    private int Transaction_Amount;
    private java.lang.CharSequence  Transaction_Date;

    /** Creates a new Builder */
    private Builder() {
      super(samples.clickstream.avro.ClickEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(samples.clickstream.avro.ClickEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Account_Id)) {
        this.Account_Id = data().deepCopy(fields()[0].schema(), other.Account_Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Customer_Name)) {
        this.Customer_Name = data().deepCopy(fields()[1].schema(), other.Customer_Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Merchant_Type)) {
        this.Merchant_Type = data().deepCopy(fields()[2].schema(), other.Merchant_Type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Transaction_Id)) {
        this.Transaction_Id = data().deepCopy(fields()[3].schema(), other.Transaction_Id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Transaction_Type)) {
        this.Transaction_Type = data().deepCopy(fields()[4].schema(), other.Transaction_Type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Transaction_Amount)) {
        this.Transaction_Amount = data().deepCopy(fields()[5].schema(), other.Transaction_Amount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Transaction_Date)) {
        this.Transaction_Date = data().deepCopy(fields()[6].schema(), other.Transaction_Date);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ClickEvent instance */
    private Builder(samples.clickstream.avro.ClickEvent other) {
            super(samples.clickstream.avro.ClickEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.Account_Id)) {
        this.Account_Id = data().deepCopy(fields()[0].schema(), other.Account_Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Customer_Name)) {
        this.Customer_Name = data().deepCopy(fields()[1].schema(), other.Customer_Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Merchant_Type)) {
        this.Merchant_Type = data().deepCopy(fields()[2].schema(), other.Merchant_Type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Transaction_Id)) {
        this.Transaction_Id = data().deepCopy(fields()[3].schema(), other.Transaction_Id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Transaction_Type)) {
        this.Transaction_Type = data().deepCopy(fields()[4].schema(), other.Transaction_Type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Transaction_Amount)) {
        this.Transaction_Amount = data().deepCopy(fields()[5].schema(), other.Transaction_Amount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Transaction_Date)) {
        this.Transaction_Date = data().deepCopy(fields()[6].schema(), other.Transaction_Date);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'ip' field */
    public java.lang.CharSequence getAccount_Id() {
      return Account_Id;
    }
    
    /** Sets the value of the 'ip' field */
    public samples.clickstream.avro.ClickEvent.Builder setAccount_Id(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Account_Id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ip' field has been set */
    public boolean hasAccount_Id() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ip' field */
    public samples.clickstream.avro.ClickEvent.Builder clearAccount_Id() {
      Account_Id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eventtimestamp' field */
    public java.lang.CharSequence getCustomer_Name() {
      return Customer_Name;
    }
    
    /** Sets the value of the 'eventtimestamp' field */
    public samples.clickstream.avro.ClickEvent.Builder setCustomer_Name( java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Customer_Name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eventtimestamp' field has been set */
    public boolean hasCustomer_Name() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eventtimestamp' field */
    public samples.clickstream.avro.ClickEvent.Builder clearCustomer_Name() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'Merchant_Type' field */
    public java.lang.CharSequence getMerchant_Type() {
      return Merchant_Type;
    }
    
    /** Sets the value of the 'Merchant_Type' field */
    public samples.clickstream.avro.ClickEvent.Builder setMerchant_Type(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Merchant_Type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'Merchant_Type' field has been set */
    public boolean hasMerchant_Type() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'Merchant_Type' field */
    public samples.clickstream.avro.ClickEvent.Builder clearMerchant_Type() {
      Merchant_Type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Transaction_Id' field */
    public java.lang.CharSequence getTransaction_Id() {
      return Transaction_Id;
    }
    
    /** Sets the value of the 'Transaction_Id' field */
    public samples.clickstream.avro.ClickEvent.Builder setTransaction_Id(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Transaction_Id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Transaction_Id' field has been set */
    public boolean hasTransaction_Id() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Transaction_Id' field */
    public samples.clickstream.avro.ClickEvent.Builder clearTransaction_Id() {
      Transaction_Id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'Transaction_Type' field */
    public java.lang.CharSequence getTransaction_Type() {
      return Transaction_Type;
    }
    
    /** Sets the value of the 'Transaction_Type' field */
    public samples.clickstream.avro.ClickEvent.Builder setTransaction_Type(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.Transaction_Type = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'Transaction_Type' field has been set */
    public boolean hasTransaction_Type() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'Transaction_Type' field */
    public samples.clickstream.avro.ClickEvent.Builder clearTransaction_Type() {
      Transaction_Type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Transaction_Amount' field */
    public java.lang.Integer getTransaction_Amount() {
      return Transaction_Amount;
    }
    
    /** Sets the value of the 'Transaction_Amount' field */
    public samples.clickstream.avro.ClickEvent.Builder setTransaction_Amount(int value) {
      validate(fields()[5], value);
      this.Transaction_Amount = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Transaction_Amount' field has been set */
    public boolean hasTransaction_Amount() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Transaction_Amount' field */
    public samples.clickstream.avro.ClickEvent.Builder clearTransaction_Amount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'Transaction_Date' field */
    public java.lang.CharSequence getTransaction_Date() {
      return Transaction_Date;
    }
    
    /** Sets the value of the 'Transaction_Date' field */
    public samples.clickstream.avro.ClickEvent.Builder setTransaction_Date(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.Transaction_Date = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'Transaction_Date' field has been set */
    public boolean hasTransaction_Date() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'Transaction_Date' field */
    public samples.clickstream.avro.ClickEvent.Builder clearTransaction_Date() {
      fieldSetFlags()[6] = false;
      return this;
    }


    @Override
    public ClickEvent build() {
      try {
        ClickEvent record = new ClickEvent();
        record.Account_Id = fieldSetFlags()[0] ? this.Account_Id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Customer_Name = fieldSetFlags()[1] ? this.Customer_Name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Merchant_Type = fieldSetFlags()[2] ? this.Merchant_Type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Transaction_Id = fieldSetFlags()[3] ? this.Transaction_Id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Transaction_Type = fieldSetFlags()[4] ? this.Transaction_Type : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.Transaction_Amount = fieldSetFlags()[5] ? this.Transaction_Amount : (java.lang.Integer) defaultValue(fields()[5]);
        record.Transaction_Date = fieldSetFlags()[6] ? this.Transaction_Date : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
